openapi: 3.1.0
info:
  title: Walandoo API
  version: 1.0.0
  description: |
    REST API for the Walandoo e-commerce demo application.
servers:
  - url: /api
paths:
  /products/:
    get:
      summary: List all products
      operationId: listProducts
      tags:
        - Products
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /products/{id}/:
    get:
      summary: Retrieve a product by ID
      operationId: getProduct
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
  /stock/:
    get:
      summary: List all stock records
      operationId: listStock
      tags:
        - Stock
      responses:
        '200':
          description: A list of stock records
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stock'
  /stock/{product_id}/:
    get:
      summary: Retrieve stock by product ID
      operationId: getStockByProductId
      tags:
        - Stock
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Stock details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
        '404':
          description: Stock not found
  /customers/:
    get:
      summary: List all customers
      operationId: listCustomers
      tags:
        - Customers
      responses:
        '200':
          description: A list of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    post:
      summary: Create a customer
      operationId: createCustomer
      tags:
        - Customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          description: Customer created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /customers/{id}/:
    get:
      summary: Retrieve a customer by ID
      operationId: getCustomer
      tags:
        - Customers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Customer details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Customer not found
    put:
      summary: Update a customer
      operationId: updateCustomer
      tags:
        - Customers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: Customer updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    delete:
      summary: Delete a customer
      operationId: deleteCustomer
      tags:
        - Customers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Customer deleted
  /carts/:
    get:
      summary: List all shopping carts
      operationId: listCarts
      tags:
        - ShoppingCarts
      responses:
        '200':
          description: A list of shopping carts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShoppingCart'
    post:
      summary: Create a shopping cart
      operationId: createCart
      tags:
        - ShoppingCarts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShoppingCart'
      responses:
        '201':
          description: Shopping cart created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCart'
  /carts/{id}/:
    get:
      summary: Retrieve a shopping cart by ID
      operationId: getCart
      tags:
        - ShoppingCarts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Shopping cart details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCart'
        '404':
          description: Shopping cart not found
    put:
      summary: Update a shopping cart
      operationId: updateCart
      tags:
        - ShoppingCarts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShoppingCart'
      responses:
        '200':
          description: Shopping cart updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCart'
    delete:
      summary: Delete a shopping cart
      operationId: deleteCart
      tags:
        - ShoppingCarts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Shopping cart deleted
  /orders/:
    get:
      summary: List all orders
      operationId: listOrders
      tags:
        - Orders
      responses:
        '200':
          description: A list of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      summary: Create an order
      operationId: createOrder
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /orders/{id}/:
    get:
      summary: Retrieve an order by ID
      operationId: getOrder
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found
    put:
      summary: Update an order
      operationId: updateOrder
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Order updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    delete:
      summary: Delete an order
      operationId: deleteOrder
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Order deleted
  /shipments/:
    get:
      summary: List all shipments
      operationId: listShipments
      tags:
        - Shipments
      responses:
        '200':
          description: A list of shipments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shipment'
    post:
      summary: Create a shipment
      operationId: createShipment
      tags:
        - Shipments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shipment'
      responses:
        '201':
          description: Shipment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
  /shipments/{id}/:
    get:
      summary: Retrieve a shipment by ID
      operationId: getShipment
      tags:
        - Shipments
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Shipment details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
        '404':
          description: Shipment not found
    put:
      summary: Update a shipment
      operationId: updateShipment
      tags:
        - Shipments
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shipment'
      responses:
        '200':
          description: Shipment updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
    delete:
      summary: Delete a shipment
      operationId: deleteShipment
      tags:
        - Shipments
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Shipment deleted
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        number:
          type: integer
        title:
          type: string
        price:
          type: number
          format: float
        description:
          type: string
        category:
          type: string
        image:
          type: string
        rating_rate:
          type: number
          format: float
        rating_count:
          type: integer
      required:
        - id
        - number
        - title
        - price
        - description
        - category
        - image
        - rating_rate
        - rating_count
    Stock:
      type: object
      properties:
        id:
          type: integer
        product:
          type: integer
        product_title:
          type: string
        quantity:
          type: integer
        last_updated:
          type: string
          format: date-time
      required:
        - id
        - product
        - quantity
        - last_updated
    Customer:
      type: object
      properties:
        id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        address:
          type: string
        created_at:
          type: string
          format: date-time
      required:
        - id
        - first_name
        - last_name
        - email
        - created_at
    ShoppingCart:
      type: object
      properties:
        id:
          type: integer
        customer:
          type: integer
        customer_name:
          type: string
        created_at:
          type: string
          format: date-time
        checked_out:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/ShoppingCartItem'
      required:
        - id
        - customer
        - created_at
        - checked_out
    ShoppingCartItem:
      type: object
      properties:
        id:
          type: integer
        product:
          type: integer
        product_title:
          type: string
        quantity:
          type: integer
      required:
        - id
        - product
        - quantity
    Order:
      type: object
      properties:
        id:
          type: integer
        customer:
          type: integer
        customer_name:
          type: string
        created_at:
          type: string
          format: date-time
        total:
          type: number
          format: float
        status:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
      required:
        - id
        - customer
        - created_at
        - total
        - status
    OrderItem:
      type: object
      properties:
        id:
          type: integer
        product:
          type: integer
        product_title:
          type: string
        quantity:
          type: integer
        price:
          type: number
          format: float
      required:
        - id
        - product
        - quantity
        - price
    Shipment:
      type: object
      properties:
        id:
          type: integer
        order:
          type: integer
        order_id:
          type: integer
        tracking_number:
          type: string
        carrier:
          type: string
        status:
          type: string
        shipped_at:
          type: string
          format: date-time
        delivered_at:
          type: string
          format: date-time
        last_updated:
          type: string
          format: date-time
      required:
        - id
        - order
        - tracking_number
        - carrier
        - status
        - last_updated